name: LiteSpeedTest & Update Clash Config

on:
  push:
    branches: [main]
  # schedule:
  #   - cron: '0 */6 * * *' # 每6小时运行一次
  workflow_dispatch: # 允许手动触发

jobs:
  speedtest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Your Repository
        uses: actions/checkout@v4

      - name: Download Full Clash Configuration (Your Node Source)
        id: download_config
        run: |
          CONFIG_URL="https://raw.githubusercontent.com/qjlxg/vt/refs/heads/main/clash_config.yaml" # 您的主配置/订阅URL
          OUTPUT_FILE="clash_config.yaml"
          echo "Downloading Clash configuration from $CONFIG_URL..."
          curl -S -L --retry 5 --retry-delay 5 --connect-timeout 10 --max-time 60 --output "$OUTPUT_FILE" "$CONFIG_URL" || { echo "Config download failed"; exit 1; }
          echo "clash_config.yaml downloaded."

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22' # 确保使用 Go 1.20 或更高版本，这里选择 1.22

      - name: Install LiteSpeedTest using go install
        run: |
          echo "Installing LiteSpeedTest using go install..."
          go install github.com/xxf098/lite-proxy@latest
          echo "LiteSpeedTest installed."

      - name: Run LiteSpeedTest and Save TXT Result
        run: |
          # 确保输出目录存在
          mkdir -p sc

          # 获取 GOPATH/bin 路径并运行 LiteSpeedTest
          # 使用 'go env GOPATH' 获取 Go 模块的根目录，然后拼接 '/bin/lite'
          LITE_EXECUTABLE_PATH="$(go env GOPATH)/bin/lite"
          
          # 检查可执行文件是否存在，以增加健壮性
          if [ ! -f "$LITE_EXECUTABLE_PATH" ]; then
            echo "Error: LiteSpeedTest executable not found at $LITE_EXECUTABLE_PATH"
            exit 1
          fi

          echo "Running LiteSpeedTest from $LITE_EXECUTABLE_PATH"
          "$LITE_EXECUTABLE_PATH" --test "./clash_config.yaml" \
               --config "./config.json" \
               --output-mode 4 \
               --output-path "./sc/xxf098.txt"
          
          echo "LiteSpeedTest results saved to sc/xxf098.txt in plain text format."
          cat sc/xxf098.txt # 打印最终的文本内容供调试

      - name: Commit and Push New Clash Config
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add sc/xxf098.txt # 添加最终的 TXT 结果文件
          git commit -m "Update Clash config with LiteSpeedTest results (sc/xxf098.txt)" || echo "No changes to commit"
          git push

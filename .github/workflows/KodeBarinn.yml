name: Speedtest Clash Nodes

on:
  workflow_dispatch: # 允许手动触发
  schedule:
    - cron: '0 8 * * *' # 每天 UTC 8:00 运行

jobs:
  run_speedtest:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Prepare Clash configuration file
      run: |
        CONFIG_URL="https://raw.githubusercontent.com/qjlxg/vt/refs/heads/main/clash_config.yaml"
        echo "正在从 ${CONFIG_URL} 下载配置文件..."
        curl -sSL "$CONFIG_URL" -o clash_config.yaml
        if [ $? -ne 0 ]; then
            echo "配置文件下载失败！请检查 URL 或网络连接。"
            exit 1
        fi
        echo "--- Clash config file content (first 20 lines) ---"
        head -n 20 clash_config.yaml
        echo "---------------------------------------------------"

    - name: Download and Start Mihomo (Clash Core)
      run: |
        MIHOMO_RELEASE=$(curl -s "https://api.github.com/repos/MetaCubeX/mihomo/releases/latest" | grep -Po '"tag_name": "\K[^"]*')
        echo "Latest Mihomo release: $MIHOMO_RELEASE"
        MIHOMO_FILENAME="mihomo-linux-amd64-${MIHOMO_RELEASE}.gz"
        MIHOMO_URL="https://github.com/MetaCubeX/mihomo/releases/download/${MIHOMO_RELEASE}/${MIHOMO_FILENAME}"
        echo "Downloading Mihomo from: $MIHOMO_URL"
        curl -L -o mihomo.gz "$MIHOMO_URL"
        gunzip mihomo.gz
        mv mihomo mihomo-core
        chmod +x mihomo-core
        ./mihomo-core -f clash_config.yaml -d 127.0.0.1:9090 -m 7890 &
        echo $! > /tmp/mihomo.pid
        MIHOMO_PID=$(cat /tmp/mihomo.pid)
        echo "Mihomo core started with PID: $MIHOMO_PID"
        sleep 15
        curl http://127.0.0.1:9090/configs > /dev/null 2>&1
        if [ $? -ne 0 ]; then
            echo "Error: Mihomo core did not start successfully."
            kill $MIHOMO_PID
            rm /tmp/mihomo.pid
            exit 1
        fi
        echo "Mihomo core is running and external controller is accessible."
        echo "Testing Mihomo proxy..."
        if ! curl -x http://127.0.0.1:7890 https://www.google.com -I -m 15; then
            echo "Warning: Mihomo proxy failed to handle HTTPS request."
        else
            echo "Mihomo proxy successfully handled HTTPS request."
        fi

    - name: Download starudream/clash-speedtest binary
      run: |
        TOOL_RELEASE=$(curl -s "https://api.github.com/repos/starudream/clash-speedtest/releases/latest" | grep -Po '"tag_name": "\K[^"]*')
        echo "Latest clash-speedtest release: $TOOL_RELEASE"
        TOOL_FILENAME="clash-speedtest_${TOOL_RELEASE}_linux_amd64.tar.gz"
        TOOL_URL="https://github.com/starudream/clash-speedtest/releases/download/${TOOL_RELEASE}/${TOOL_FILENAME}"
        echo "Downloading clash-speedtest from: $TOOL_URL"
        curl -L -o clash-speedtest.tar.gz "$TOOL_URL"
        tar -xzf clash-speedtest.tar.gz clash-speedtest
        chmod +x clash-speedtest
        ./clash-speedtest -h

    - name: Run clash-speedtest
      id: speedtest
      env:
        NO_PROGRESS: "true" # 禁用进度条以避免 ioctl 错误
      run: |
        mkdir -p results
        # 移除 --timeout，优化下载大小和线程数，仅测试支持 TLS 的代理
        ./clash-speedtest -d cloudflare -r 5 -t 3 -o results/speedtest_results.yaml -y -i Vmess,Trojan,Vless -e Shadowsocks
        if [ ! -s results/speedtest_results.yaml ]; then
            echo "Warning: 测速结果文件为空或未生成，继续执行后续步骤。"
        else
            echo "--- Speedtest results (first 20 lines) ---"
            head -n 20 results/speedtest_results.yaml
            echo "------------------------------------------"
        fi
      continue-on-error: true # 允许继续，即使测速失败

    - name: Stop Mihomo Core
      if: always()
      run: |
        if [ -f "/tmp/mihomo.pid" ]; then
            MIHOMO_PID=$(cat /tmp/mihomo.pid)
            echo "Stopping Mihomo core with PID: $MIHOMO_PID"
            kill $MIHOMO_PID || true
            rm /tmp/mihomo.pid
        else
            echo "No Mihomo PID file found."
        fi

    - name: Commit and push results
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add results/speedtest_results.yaml || echo "No results file to add"
        git commit -m "chore: Update speedtest results" || echo "No changes to commit"
        git push || echo "No new commits to push"

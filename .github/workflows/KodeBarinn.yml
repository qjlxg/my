name: 运行 Mihomo 测速并提交结果 (带节点过滤)

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '0 0 * * *'

jobs:
  run_speedtest:
    runs-on: ubuntu-latest

    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4

      - name: 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: 安装 Python 依赖
        run: |
          pip install pyyaml

      - name: 设置 Rust 环境
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: 安装 mihomo-speedtest-rs 工具
        run: |
          cargo install mihomo-speedtest-rs

      - name: 下载原始 Clash 配置文件
        run: |
          DOWNLOAD_URL="https://raw.githubusercontent.com/qjlxg/vt/refs/heads/main/clash_config.yaml"
          INPUT_CONFIG_PATH="clash_config.yaml"

          echo "正在从 ${DOWNLOAD_URL} 下载原始配置文件到 ${INPUT_CONFIG_PATH}..."
          curl -sSL "${DOWNLOAD_URL}" -o "${INPUT_CONFIG_PATH}"
          if [ $? -ne 0 ]; then
              echo "原始配置文件下载失败！请检查 URL 或网络连接。"
              exit 1
          fi
          echo "原始配置文件下载完成。"

      - name: 运行 Python 脚本过滤节点
        run: |
          echo "正在运行 filter_clash_nodes.py 脚本过滤节点..."
          python filter_clash_nodes.py
          if [ $? -ne 0 ]; then
              echo "节点过滤脚本运行失败！请检查 Python 脚本是否存在错误或路径是否正确。"
              exit 1
          fi
          echo "节点过滤完成，生成 filtered_nodes.yaml。"

      - name: 检查 filtered_nodes.yaml 内容
        run: |
          echo "--- filtered_nodes.yaml 内容开始 ---"
          cat filtered_nodes.yaml
          echo "--- filtered_nodes.yaml 内容结束 ---"
          # 检查文件是否存在且非空
          if [ ! -s filtered_nodes.yaml ]; then
              echo "Error: filtered_nodes.yaml is empty or does not exist after filtering!"
              exit 1
          fi

      - name: 运行测速并将结果保存到 sc/KodeBarinn.yaml
        run: |
          mkdir -p sc
          mihomo-speedtest --config filtered_nodes.yaml --output sc/KodeBarinn.yaml
          if [ $? -ne 0 ]; then
              echo "Mihomo 测速失败！请检查测速工具或过滤后的配置文件。"
              exit 1
          fi
          echo "Mihomo 测速完成。"

      - name: 提交并推送测速结果
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add sc/KodeBarinn.yaml
          git commit -m "chore: Update mihomo-speedtest results after filtering" || echo "No changes to commit"
          git push || echo "No new commits to push"

name: XieCang Speedtest

on:
  workflow_dispatch: # 允许手动触发
  schedule:
    - cron: '0 */6 * * *' # 每6小时运行一次，你可以根据需要调整

jobs:
  run-speedtest:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get latest speedtest-clash release
      id: get_release
      run: |
        # 获取最新 release 的 Linux x86_64 版本下载 URL
        # 我们将从 releases API 获取，并解析出正确的下载链接
        # speedtest-clash_Linux_x86_64.tar.gz
        ASSET_URL=$(curl -s https://api.github.com/repos/xiecang/speedtest-clash/releases/latest | \
          grep "browser_download_url.*speedtest-clash_Linux_x86_64.tar.gz" | \
          awk '{print $2}' | \
          tr -d '"')
        
        if [ -z "$ASSET_URL" ]; then
          echo "Error: Could not find speedtest-clash_Linux_x86_64.tar.gz in latest release assets."
          exit 1
        fi
        
        echo "::set-output name=download_url::$ASSET_URL"
      shell: bash

    - name: Download speedtest-clash
      run: |
        wget ${{ steps.get_release.outputs.download_url }} -O speedtest-clash.tar.gz
        tar -xzf speedtest-clash.tar.gz
        chmod +x speedtest-clash # 使其可执行
      working-directory: ${{ runner.temp }} # 在临时目录下载和解压

    - name: Create output directory
      run: mkdir -p sc

    - name: Run speedtest-clash and save output
      run: |
        # 使用你提供的节点来源URL和输出文件路径
        # 注意：speedtest-clash 的 -output 参数看起来是输出结果到文件
        # 它应该生成 Clash YAML 格式的测速结果
        ${{ runner.temp }}/speedtest-clash \
          -c https://raw.githubusercontent.com/qjlxg/vt/refs/heads/main/clash_config.yaml \
          -output sc/xiecang.yaml \
          -timeout 10s \
          -size 52428800 # 50MB 下载大小，你可以根据需要调整
     
    - name: Commit and push results
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add sc/xiecang.yaml
        git commit -m "Update xiecang.yaml with speedtest results" || echo "No changes to commit"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub Actions 默认提供的 token

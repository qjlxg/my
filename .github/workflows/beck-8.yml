name: Test Node Download Speed

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # 每天 UTC 00:00 运行
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write # 授予写权限

jobs:
  test-node-speed:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: pip install requests pyyaml

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      # 启动 Subconverter 容器
      - name: Run Subconverter Container
        run: |
          # 启动 Subconverter 容器在后台运行
          docker run -d --name subconverter -p 25500:25500 ttfw/subconverter:latest
          echo "Waiting for Subconverter to start..."
          # 简单等待一下，确保服务启动
          sleep 10
          # 检查 Subconverter 是否成功启动
          docker logs subconverter || true # 打印日志，即使失败也继续

      # 启动 Clash 容器
      - name: Run Clash Container
        run: |
          mkdir -p sc # 确保输出目录存在
          # 启动 Clash 容器，并挂载配置和输出目录
          # 使用 `dreamacro/clash` 官方镜像
          # -p 9090:9090 暴露 API 端口
          # -v /tmp/clash_config.yaml:/root/.config/clash/config.yaml 这是Clash默认配置文件路径
          docker run -d --name clash_core \
            -p 9090:9090 \
            -v $(pwd)/sc:/output \
            # 将在 /tmp/clash_config.yaml 生成的配置挂载到Clash容器的默认路径
            -v /tmp/clash_config.yaml:/root/.config/clash/config.yaml:ro \
            dreamacro/clash:latest # 使用 Clash 官方镜像
          echo "Clash container started."
          # 额外等待Clash完全启动和加载配置
          sleep 15 # 给Clash更多时间启动和加载配置

      - name: Run Node Speed Test Script
        run: |
          python scripts/main.py
        env:
          # 将输出路径传递给脚本
          OUTPUT_FILE_PATH: ${{ github.workspace }}/sc/NodeDownloadSpeedTest.yaml

      - name: Check output file
        run: |
          ls -l sc/ || echo "No files in sc directory"
          cat sc/NodeDownloadSpeedTest.yaml || echo "Output file not found"

      - name: Commit and push results
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add sc/NodeDownloadSpeedTest.yaml
          git commit -m "Update node speed test results" || echo "No changes to commit"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Test Node Download Speed

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # 每天 UTC 00:00 运行
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write # 授予写权限

jobs:
  test-node-speed:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout THIS repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # 用于克隆您自己的仓库

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: pip install requests pyyaml

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      # --- 新增步骤：克隆并构建 Subconverter 镜像 ---
      - name: Clone Subconverter repository and Build Docker image
        run: |
          echo "Cloning Subconverter repository..."
          # 使用 git clone 拉取 Subconverter 源代码
          git clone https://github.com/tindyhr/subconverter.git subconverter-src
          
          echo "Building Subconverter Docker image..."
          cd subconverter-src
          # 检查 Dockerfile 是否存在
          if [ -f "Dockerfile" ]; then
            docker build -t my-subconverter:latest .
          else
            echo "Error: Dockerfile not found in subconverter-src. Check repository structure."
            exit 1
          fi
          cd .. # 回到工作目录
        # 如果 git clone subconverter 遇到问题，尝试提供 token
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # -----------------------------------------------

      # 启动我们自己构建的 Subconverter 容器
      - name: Run My Subconverter Container
        run: |
          docker run -d --name subconverter -p 25500:25500 my-subconverter:latest
          echo "Waiting for My Subconverter to start..."
          sleep 10
          docker logs subconverter || true

      # 启动 Clash 容器 (Clash 官方镜像目前还算稳定，先保留)
      - name: Run Clash Container
        run: |
          mkdir -p sc # 确保输出目录存在
          docker run -d --name clash_core \
            -p 9090:9090 \
            -v $(pwd)/sc:/output \
            -v /tmp/clash_config.yaml:/root/.config/clash/config.yaml:ro \
            dreamacro/clash:latest # 依然尝试 Clash 官方镜像
          echo "Clash container started."
          sleep 15 # 给Clash更多时间启动和加载配置

      - name: Run Node Speed Test Script
        run: |
          python scripts/main.py
        env:
          # 将输出路径传递给脚本
          OUTPUT_FILE_PATH: ${{ github.workspace }}/sc/NodeDownloadSpeedTest.yaml

      - name: Check output file
        run: |
          ls -l sc/ || echo "No files in sc directory"
          cat sc/NodeDownloadSpeedTest.yaml || echo "Output file not found"

      - name: Commit and push results
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add sc/NodeDownloadSpeedTest.yaml
          git commit -m "Update node speed test results" || echo "No changes to commit"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Test Node Download Speed

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # 每天 UTC 00:00 运行
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write # 授予写权限

jobs:
  test-node-speed:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout THIS repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # 用于克隆您自己的仓库

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Create config directory
        run: mkdir -p config

      - name: Create config.yaml
        run: |
          cat << EOF > config/config.yaml
          sources:
            - name: custom_nodes_from_url
              type: url
              url: https://raw.githubusercontent.com/qjlxg/ss/refs/heads/master/list.meta.yml
          check:
            interval: 3600
            timeout: 20
            concurrency: 2
            speedtest:
              enabled: true
              url: https://speed.cloudflare.com/__down?bytes=5000000
              timeout: 15
              connections: 5
          output:
            path: /output/NodeDownloadSpeedTest.yaml
            format: yaml
          EOF

      # --- 使用 actions/checkout 克隆 Proxy-Go 仓库 ---
      - name: Clone Proxy-Go repository
        uses: actions/checkout@v4
        with:
          repository: wangzhe0622/Proxy-Go # 指定要克隆的仓库
          path: proxy-go-src             # 克隆到 proxy-go-src 目录
          # 对于公共仓库，通常不需要 token，但如果网络问题，可以尝试提供
          # token: ${{ secrets.GITHUB_TOKEN }} # 如果仍然失败，可以取消注释尝试
                                              # 但这通常只用于私有仓库

      - name: Build Proxy-Go Docker image
        run: |
          cd proxy-go-src
          docker build -t my-proxy-go:latest .
          cd .. # 回到工作目录
      # --------------------------------------------------

      - name: Run Proxy-Go for speed test
        run: |
          mkdir -p sc
          rm -f sc/* || true # 清理旧文件
          docker run --rm --name proxy-go-tester \
            -v $(pwd)/config/config.yaml:/etc/proxy-go/config.yaml:ro \
            -v $(pwd)/sc:/output \
            my-proxy-go:latest

          EXIT_CODE=$(docker inspect -f '{{.State.ExitCode}}' proxy-go-tester)
          echo "Proxy-Go container exited with code: $EXIT_CODE"
          if [ "$EXIT_CODE" -ne 0 ]; then
            echo "Proxy-Go exited with an error. Checking logs..."
            docker logs proxy-go-tester
            exit 1
          fi

      - name: Check output file
        run: |
          ls -l sc/ || echo "No files in sc directory"
          cat sc/NodeDownloadSpeedTest.yaml || echo "Output file not found"

      - name: Commit and push results
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add sc/NodeDownloadSpeedTest.yaml
          git commit -m "Update node speed test results" || echo "No changes to commit"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
